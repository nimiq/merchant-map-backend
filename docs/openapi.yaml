openapi: 3.0.1
info:
  title: Crypto Map API documentation
  description: The Shop Directory API is serves a list of shops that accept crypto as a payment method.
  contact: {}
  license:
    name: MIT
    url: https://github.com/nimiq/merchant-map-backend/blob/master/LICENSE
  version: "1.0"
tags:
  - name: locations
    description: Location Controller
paths:
  /api/search:
    get:
      tags:
        - locations
      summary: search
      operationId: searchLocations
      parameters:
        - $ref: "#/components/parameters/city"
        - $ref: "#/components/parameters/country"
        - $ref: "#/components/parameters/currency"
        - $ref: "#/components/parameters/description"
        - $ref: "#/components/parameters/email"
        - $ref: "#/components/parameters/label"
        - $ref: "#/components/parameters/address_line_1"
        - $ref: "#/components/parameters/address_line_2"
        - $ref: "#/components/parameters/address_line_3"
        - $ref: "#/components/parameters/number"
        - $ref: "#/components/parameters/website"
        - $ref: "#/components/parameters/zip"
        - $ref: "#/components/parameters/bounding"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/digital_goods"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CryptoLocation"
        "201":
          description: Create
        "404":
          description: Not Found
  /api/location/{locationId}:
    get:
      tags:
        - locations
      summary: Get location by id
      operationId: getLocationById
      parameters:
        - in: path
          name: locationId
          schema:
            type: string
          required: true
          description: Place id from Google Maps
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CryptoLocation"
        "201":
          description: Create
        "404":
          description: Not Found
  /api/currencies:
    get:
      tags:
        - locations
      summary: Currencies
      operationId: getCurrencies
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Currencies"
        "201":
          description: Create
        "404":
          description: Not Found
  /api/issue_categories:
    get:
      tags:
        - locations
      summary: Get issue categories with its label
      operationId: getIssueCategories
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                title: CategoriesIssues
                type: array
                items:
                  type: object
                  required:
                    - "id"
                    - "name"
                  properties:
                    name:
                      type: string
                    id:
                      type: number
  /api/issue:
    post:
      tags:
        - locations
      summary: Create a new issue for a location
      operationId: postLocationIssue
      requestBody:
        content:
          application/json:
            schema:
              title: LocationIssueBody
              type: object
              required:
                - "google_place_id"
                - "issue_category_id"
                - "description"
                - "token"
              properties:
                issue_category_id:
                  type: string
                google_place_id:
                  type: string
                token:
                  type: string
                description:
                  type: string
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                title: LocationIssueResponse
                type: object
                required:
                  - "message"
                properties:
                  message:
                    type: string
        "400":
          description: Bad Request
  /api/location:
    post:
      tags:
        - locations
      summary: Create a new candidate for a location
      operationId: postCandidate
      requestBody:
        content:
          application/json:
            schema:
              title: LocationCandidateBody
              type: object
              required:
                - "google_place_id"
                - "token"
                - "name"
                - "currencies"
              properties:
                google_place_id:
                  type: string
                token:
                  type: string
                name:
                  type: string
                currencies:
                  type: array
                  items:
                    type: string
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                title: LocationCandidateResponse
                type: object
                required:
                  - "message"
                properties:
                  message:
                    type: string
        "400":
          description: Bad Request
components:
  parameters:
    city:
      name: "filter[city]"
      in: query
      schema:
        type: string
    country:
      name: "filter[country]"
      in: query
      schema:
        type: string
    currency:
      name: "filter[currency]"
      in: query
      schema:
        type: array
        items:
          type: string
    description:
      name: "filter[description]"
      in: query
      schema:
        type: string
    email:
      name: "filter[email]"
      in: query
      schema:
        type: string
        format: email
    label:
      name: "filter[label]"
      in: query
      schema:
        type: string
    address_line_1:
      name: "filter[address_line_1]"
      in: query
      schema:
        type: string
    address_line_2:
      name: "filter[address_line_2]"
      in: query
      schema:
        type: string
    address_line_3:
      name: "filter[address_line_3]"
      in: query
      schema:
        type: string
    number:
      name: "filter[number]"
      in: query
      schema:
        type: number
    website:
      name: "filter[website]"
      in: query
      schema:
        type: string
        format: url
    zip:
      name: "filter[zip]"
      in: query
      schema:
        type: string
    bounding:
      name: "filter[bounding_box]"
      description: "SW longitude, SW latitude, NE longitude, NE latitude"
      in: query
      schema:
        type: string
    limit:
      name: "filter[limit]"
      in: query
      schema:
        type: number
    digital_goods:
      name: "filter[digital_goods]"
      in: query
      schema:
        type: boolean
  schemas:
    CryptoLocation:
      type: object
      additionalProperties: false
      required:
        - id
        - place_id
        - name
        - photo_reference
        - category
        - type
        - rating
        - address
        - gmaps_url
        - geo_location
        - currencies
      properties:
        id:
          type: number
        place_id:
          type: string
        name:
          type: string
        photo_reference:
          type: string
        category:
          type: string
        type:
          type: string
        rating:
          type: number
        address:
          type: string
        gmaps_url:
          type: string
        geo_location:
          type: object
          additionalProperties: false
          required:
            - lat
            - lng
          properties:
            lat:
              type: number
            lng:
              type: number
        currencies:
          type: array
          items:
            $ref: "#/components/schemas/CryptoCurrency"
    CryptoCurrency:
      type: object
      properties:
        BTC:
          type: string
        DASH:
          type: string
        LTC:
          type: string
        ETH:
          type: string
        XRP:
          type: string
        XLM:
          type: string
        NIM:
          type: string
    Currencies:
      title: Currency
      description: All supported currencies
      type: array
      items:
        type: object
        required:
          - "symbol"
          - "name"
        properties:
          name:
            type: string
          symbol:
            type: string
    LocationIssue:
      title: LocationIssue
      type: object
      required:
        - "id"
        - "label"
      properties:
        label:
          type: string
        id:
          type: number
